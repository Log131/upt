from aiogram import Dispatcher,Bot,executor,types

import aiosqlite

from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import asyncio
from aiogram.dispatcher.filters.state import State, StatesGroup

from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext


token = '6352182386:AAFUtWCgmF_AzvEkpAD0a3N9DRHgJw17XUw'

bot = Bot(token=token)
storage5 = MemoryStorage()



dp = Dispatcher(bot=bot, storage=storage5)


async def fffff():
   async with aiosqlite.connect('ref.db') as tc:
      await tc.execute('CREATE TABLE IF NOT EXISTS r(user_id, links)')
      await tc.execute('CREATE TABLE IF NOT EXISTS s(user_id PRIMARI KEY)')
 
      await tc.commit()




@dp.message_handler(commands=['start'])
async def strsx(msg: types.Message):
    s = InlineKeyboardMarkup()
    row = InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É', callback_data=f'get')
    s.add(row)
    if msg.from_user.username == None:
        await msg.answer(' –Ø –Ω–µ –º–æ–≥—É –≤—ã–¥–∞—Ç—å —Å—Å—ã–ª–∫—É, —Ç–∞–∫ –∫–∞–∫ —É –í–∞—Å –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞. \n –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º.')
    else:
        async with aiosqlite.connect('ref.db') as tc:
            await tc.execute('INSERT OR IGNORE INTO r(user_id, links) VALUES(?, ?)',(msg.from_user.id,'yes',))
            await tc.execute('INSERT OR IGNORE INTO s(user_id) VALUES(?)', (msg.from_user.id,))
            await tc.commit()
        await msg.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –º–æ–µ–π –≥—Ä—É–ø–ø—ã \n@kaif_worksüòéü§òüèº –¢—É—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å\n–Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π –≤ –≥—Ä—É–ø–ø—É ü§ëüí∏\n\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É, –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –º–∏–Ω–∏–º—É–º 7\n—á–µ–ª–æ–≤–µ–∫ –≤ –≥—Ä—É–ø–ø—Éüëç‚ù§Ô∏è\n–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 10\n—Ä—É–±–ª–µ–πüî•üòé\n\n–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É?\n–ü–∏—à–µ–º –≤ –ª—Å @kaif_work –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –≤—ã–ø–ª–∞—Ç—ã: \n\n1. –£–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—à —é–∑–µ—Ä–Ω–µ–π–º, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã –±—Ä–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é\n—Å—Å—ã–ª–∫—É\n2. –£–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –±—Ä–∞–ª–∞—Å—å —Å—Å—ã–ª–∫–∞\n3. –ü–∏—à–µ–º —Ä–µ–∫–≤–µ–∑–∏—Ç—ã, –°–ë–ü –∏ –±–∞–Ω–∫\n\n–í—Å–µ –≤—ã–ø–ª–∞—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è @kaif_work, \n—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ‚ÄºÔ∏è\n\n–ó–∞ –∫–∞–∫–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏–¥—ë—Ç –æ–ø–ª–∞—Ç–∞:–ó–∞ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π –≤ –∂–∏–∑–Ω–∏, –≤\n–∏–≥—Ä–µ –∏ —Ç.–ø. , –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤, –æ–¥–Ω–æ–≥—Ä—É–ø–ø–Ω–∏–∫–æ–≤, —Ç–æ–≤–∞—Ä–∏—â–µ–π –ø–æ\n—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º —Å–µ–∫—Ü–∏—è–º\n\n–ó–∞ –∫–∞–∫–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –º—ã –Ω–µ –ø–ª–∞—Ç–∏–º:–í–∑–∞–∏–º–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏\n–Ω–µ–∑–Ω–∞–∫–æ–º—ã–π –≤–∞–º —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –Ω–∞—à–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤ –∫–∞–∫–æ–º-—Ç–æ\n–∞—Ç–µ –∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –µ–º—É –≤ –ª—Å —Å –ø—Ä–æ—Å—å–±–æ–π –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –∑–∞ –Ω–∞–∫—Ä—É—Ç–∫—É\n–±–æ—Ç–æ–≤ (–≤—ã–¥–∞—ë—Ç—Å—è –≤ —Ü–µ–ª–æ–º –±–∞–Ω)\n\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ –ª—Å @kaif_work \n\n‚ÄºÔ∏è–ó–∞ –ø–æ–ø—ã—Ç–∫–∏ –æ–±–º–∞–Ω–∞ –º—ã –≤—ã–¥–∞—ë–º –≤–∞–º –±–∞–Ω‚ÄºÔ∏è', parse_mode='Markdown')
        await msg.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É¬ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é\n—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É @kaif_works',reply_markup=s)



class sendSpam(StatesGroup):
    send_ = State()



@dp.callback_query_handler(text='get')
async def linkf(css: types.CallbackQuery):
    await css.answer()
    
    async with aiosqlite.connect('ref.db') as tc:

        async with tc.execute('SELECT links FROM r WHERE user_id = ?',(css.from_user.id,)) as f:
            links = await f.fetchone()
        if links[0] == 'yes':
            
            s = await bot.create_chat_invite_link(chat_id=-1001791109996,name=css.from_user.username)
            async with aiosqlite.connect('ref.db') as tc:
                await tc.execute('UPDATE r SET links = ? WHERE user_id = ?', (s.invite_link, css.from_user.id,))
                await tc.commit()
            await css.message.answer(f'–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {s.invite_link}')
        else:
            await css.message.answer(f'–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {links[0]}')



@dp.message_handler(commands=['r'], state=None)
async def spams(msg: types.Message, state: FSMContext):
    if msg.from_user.id == 6203509782 or msg.from_user.id == 5954314568:
        s = InlineKeyboardMarkup()
        row = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='Cansel')
        s.add(row)
        await msg.answer('–í–≤–µ–¥–∏—Ç–µ –¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –æ—Ç–º–µ–Ω–∞', reply_markup=s)
        await sendSpam.send_.set()
    else:
        pass



@dp.callback_query_handler(text='Cansel', state=sendSpam.send_)
async def spams5(css: types.CallbackQuery, state: FSMContext):
    await css.answer()
    await state.finish()
    await css.message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ')


@dp.message_handler(state=sendSpam.send_)
async def spams555(msg: types.Message, state: FSMContext):
    async with aiosqlite.connect('ref.db') as tc:
        async with tc.execute('SELECT DISTINCT user_id FROM r') as f:
            s = await f.fetchall()
        for i in s:
            try:
                await bot.send_message(chat_id=i[0], text=msg.text)
            
            except:
                pass
        await msg.answer('–†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')
        await state.finish()

if __name__ == '__main__':

    s = asyncio.get_event_loop()
    s.run_until_complete(fffff())
    executor.start_polling(dp, skip_updates=True)